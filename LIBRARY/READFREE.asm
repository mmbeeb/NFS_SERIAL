

	;********************************
	;*          READFREE            *
	;*   Original ACORN version     *
	;********************************

	;* Assembled using beebasm 1.09 *

	;THIS IS THE MASTER VERSION.

	LOADADDR =?&0E23

	OSASCI=?&FFE3
	OSNEWL=?&FFE7
	OSWRCH=?&FFEE
	OSWORD=?&FFF1
	OSBYTE=?&FFF4

	TXTPTR=?&F2

	CLEAR LOADADDR, LOADADDR+&200
	ORG LOADADDR

.RDFREE_START
{
IF LOADADDR=&DD00
	LDX #&11
	LDA #&A1
	JSR OSBYTE
	TYA
	BPL L_DD17

	LDX #&00

.L_DD0C
	LDA D_DDDC,X
	BEQ L_DD17

	JSR OSASCI
	INX
	BNE L_DD0C
ENDIF

.L_DD17
	LDY #&00
	LDA #&01
	LDX #&A8
	JSR OSARGS

	LDA &A8
	STA TXTPTR
	LDA &A9
	STA TXTPTR+1

	LDA #&02
	JSR OSARGS
	CMP #&02
	BNE L_DD3A

	CLC
	JSR GSINIT

.L_DD35
	JSR GSREAD
	BCC L_DD35

.L_DD3A
	CLC
	LDX #&00
	JSR GSINIT
	BEQ L_DD4B

.L_DD42
	JSR GSREAD
	STA OW_BLK+7,X
	INX
	BCC L_DD42

.L_DD4B
	LDA #&0D
	STA OW_BLK+7,X
	
	TXA
	ADC #&07
	STA OW_BLK+1

	LDX #LO(OW_BLK)
	LDY #HI(OW_BLK)
	LDA #&14
	JSR OSWORD

	LDA OW_BLK+3;ERR NO?
	BEQ L_DDBE

	CMP #&85
	BNE L_DD93

	;STA &C009
	;IN NFS 3.60 0E09 = Last non-zero Return Code

	BRK
	EQUS &A8, "Not supported : Disc space accounting", 0

.L_DD93
	LDA #&00
	STA &0100
	
	LDA OW_BLK+3;ERR NO.
	CMP #&A0
	BCS L_DDA4
	
.L_DD9F
	;STA &C009
	
	LDA #&A8
	
.L_DDA4
	CMP #&C0
	BCS L_DD9F
	
	STA &0101
	LDX #&01
	
.L_DDAD
	LDA OW_BLK+3,X
	STA &0101,X
	INX
	EOR #&0D
	BNE L_DDAD
	
	STA &0100,X
	JMP &0100
	
.L_DDBE
	LDX #&03
	
.L_DDC0
	LDA OW_BLK+4,X
	JSR S_DE12
	DEX
	BPL L_DDC0
	
	JSR S_DDF8_PRINT
	EQUS " = "
	
	CLV
IF LOADADDR=&0E23
	JMP L_DE2F
ELSE
	BVC L_DE2F;ALWAYS
ENDIF
	
.D_DDD2
	SKIP 10

IF LOADADDR=&0E23
	ORG &0F09
	
	EQUD &FFFF0E23
ENDIF

.D_DDDC
	EQUS "Read User Free Space. 1.06", 13, 0

.S_DDF8_PRINT
	PLA
	STA &A8
	PLA
	STA &A9
	LDY #&00
	BEQ L_DE05
	
.L_DE02	JSR OSASCI

.L_DE05
	INC &A8
	BNE L_DE0B
	
	INC &A9
	
.L_DE0B
	LDA (&A8),Y
	BPL L_DE02
	
	JMP (&00A8)
	
.S_DE12
	PHP
	PHA
	LSR A
	LSR A
	LSR A
	LSR A
	JSR S_DE1D
	PLA
	PLP
	
.S_DE1D
	PHP
	PHA
	AND #&0F
	CMP #&0A
	BCC L_DE27
	
	ADC #&06
	
.L_DE27
	ADC #&30
	JSR OSASCI
	PLA
	PLP
	RTS
	
.L_DE2F
	LDY #&20
	PHP
	
.L_DE32
	PLP
	ROL OW_BLK+4
	ROL OW_BLK+5
	ROL OW_BLK+6
	ROL OW_BLK+7
	PHP
	DEY
	BMI L_DE62
	
	LDX #&FF
	
.L_DE45
	PHP
	INX
	CPX #&0A
	BEQ L_DE5E
	
	PLP
	LDA D_DDD2,X
	ROL A
	STA D_DDD2,X
	CMP #&0A
	BCC L_DE45
	
	SBC #&0A
	STA D_DDD2,X
	BCS L_DE45
	
.L_DE5E
	PLP
	CLC
	BCC L_DE32
	
.L_DE62
	PLP
	LDX #&09
	LDY #&20
	
.L_DE67
	LDA D_DDD2,X
	CMP #&00
	BNE L_DE72
	
	CPY #&20
	BEQ L_DE87
	
.L_DE72
	LDY #&2C
	JSR S_DE1D
	
	CPX #&09
	BEQ L_DE83
	
	CPX #&06
	BEQ L_DE83
	
	CPX #&03
	BNE L_DE87
	
.L_DE83
	TYA
	JSR OSASCI
	
.L_DE87
	CPX #&01
	BNE L_DE8C
	
	INY
	
.L_DE8C
	DEX
	BPL L_DE67
	
	JSR S_DDF8_PRINT
	EQUS " bytes remaining", 13, 13
	NOP
	RTS

.OW_BLK
	EQUB 0, 7, 0, 30
}
.RDFREE_END

IF HI(RDFREE_START)=&DD;MASTER
	SAVE "M\$.RDFREE", RDFREE_START, RDFREE_END
ELIF HI(RDFREE_START)=&0E
	SAVE "E\$.RDFREE", RDFREE_START, RDFREE_END
ELSE
	SAVE "O\$.RDFREE", RDFREE_START, RDFREE_END
ENDIF

