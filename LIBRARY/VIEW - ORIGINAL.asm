

	;********************************
	;*            VIEW              *
	;*   Original ACORN version     *
	;********************************

	;* Assembled using beebasm 1.09 *
	
	;THIS IS THE MASTER VERSION
	;IT WON'T RUN IN STATIC WORKSPACE

	LOADADDR1=?&DD00

	GSINIT=?&FFC2
	GSREAD=?&FFC5
	OSARGS=?&FFDA
	OSASCI=?&FFE3
	OSNEWL=?&FFE7
	OSWRCH=?&FFEE
	OSWORD=?&FFF1
	OSBYTE=?&FFF4

	TXTPTR=?&F2

	CLEAR LOADADDR1, LOADADDR1+&200
	ORG LOADADDR1

.VIEW_START
{
.D_DD00

	LDY #&FF
	LDX #&07
	JSR S_DEB7;X PRESERVED
	BCC L_DD3C;IF STATION READ, A=STATION

	;USER NAME?
.L_DD09
	LDA (TXTPTR),Y
	CMP #'!'
	INX
	BNE L_DD14

	EQUD 0

.L_DD14
	BCS L_DD18

	LDA #&0D

.L_DD18
	STA D_DEB4-1,X
	INY
	EOR #&0D
	BNE L_DD09

	LDX #LO(D_DEB4)
	LDY #HI(D_DEB4)
	LDA #&14
	JSR OSWORD

	LDA D_DEB4+3
	BEQ L_DD36;USER FOUND

	LDA #&00
	STA D_DEB4+17
	JMP D_DEB4+2

.L_DD36
	LDA D_DEB4+5;STATION
	LDX D_DEB4+6;NET

	;GOT STATION & NET
.L_DD3C
	STA D_DD00+2;STATION
	STX D_DD00+3
	
	SEC;TRANSMIT AFTER POP
	JSR S_DE77;POP FROM D_DE90 & TRANSMIT (UPDATE WORKSPACE)
	;This instructs the remote machine to copy data relating to the screen mode to it's
	;second page of private workspace, offset at &E9.

	;In the remote machine the pointer to the second page of private workspace is at &009E
.L_DD46
	LDY #&19
	JSR S_DE79;POP FROM D_DE9C & TRANSMIT (PEEK &FFFF009E)
	LDY D_DD00+12;DATA RETURNED?
	BNE L_DD46

	LDX #&E9
	STX D_DD00+12
	DEY
	STY D_DD00+14
	STY D_DD00+15
	
	;Read the remote data that was copied to the private workspace
	LDY #&23
	LDX #&0B
	JSR S_DE7B;POP FROM D_DE0C & TRANSMIT (PEEK &FFFFxxE9)
	
	LDY #&19
	CLC;DON'T TRANSMIT ON POP
	JSR S_DE79;POP FROM D_DE9C (PEEK &FFFF009E)
	
	LDA #&10
	LDY &0355;Current screen mode
	
	BIT D_DD00+34;REMOTE SCREEN MODE
	BVC L_DD78

	DEC D_DD00+14
	BVS L_DD7D;ALWAYS

.L_DD78
	BIT D_DD00+62;Set V?
	BNE L_DD83

.L_DD7D
	LDA D_DD00+34
	JMP L_DD8C

.L_DD83
	BRK
	EQUS &AD, "Mode "

.D_DD8A
	EQUS "?", 0

.L_DD8C
	ORA #&80
	TAX
	LDA #22
	JSR S_DE64;VDU 22,X, i.e. MODE X
	
	AND #&07
	CMP #7
	PHP
	
	TAX
	LDA #&80
	STA D_DD00+9
	SEC
	SBC D_DE5A,X;MODE'S SCREEN SIZE
	STA D_DD00+5

IF CPU<>1
	;6502
	LDX #0
	STX D_DD00+4
	STX D_DD00+8
ELSE
	;65C02
	STZ D_DD00+4
	STZ D_DD00+8
ENDIF
	DEC D_DD00+6
	DEC D_DD00+10

IF CPU<>1
	INX;X:=1
ELSE
	LDX #1
ENDIF

.L_DDB4
	LDA D_DD00+35,X
	STA D_DD00+12,X
	
	LDA D_DD00+16,X;ADDRESS OF TOP LEFT OF REMOTE SCREEN
	STA &0350,X
	STA &B2,X
	
	DEX
	BPL L_DDB4

	LDY #&02
	LDA &0351
	PLP
	BEQ L_DDD5;IF MODE 7

.L_DDCD
	LSR A
	ROR &B2
	DEY
	BPL L_DDCD
	BNE L_DDD9

.L_DDD5
	SBC #&74
	EOR #&20

.L_DDD9
	LDY #&0C
	STY &FE00
	INY;Y:=&0D
	STA &FE01
	STY &FE00
	LDA &B2
	STA &FE01
	
	;DEFINE LOGICAL COLOURS
	LDX #&0F

.L_DDEC
	JSR S_DE62;VDU 19,X
	LDA D_DD00+18,X;PHYSICAL COLOUR OF LOGICAL COLOUR X
	JSR OSWRCH

	;VDU 0,0,0
	LDY #&03

.L_DDF7
	JSR OSWRCH
	DEY
	BNE L_DDF7
	
	DEX
	BPL L_DDEC
	
	LDX D_DD00+37;MARK PERIOD COUNT (FLASHING COLOURS)
	STX &0252
	LDX D_DD00+38;SPACE PERIOD COUNT (FLASHING COLOURS)
	STX &0253
	
	LDA #&0D
	JSR OSWRCH

	;DO SCREEN PEEK, RETRY ON FAILURE
.L_DE11
	DEC L_DE3F_SYNTAX
	BEQ L_DE30_NOTLISTENING;GIVE UP?

	LDX #LO(D_DD00)
	LDY #HI(D_DD00)
	LDA #&10
	JSR OSWORD

.L_DE1F
	LDA #&7E
	BIT &FF
	BPL L_DE6B;NO ESCAPE!

	JSR OSBYTE
	BRK
	EQUS &11, "Escape"

.L_DE30_NOTLISTENING
	BRK
	EQUS &A2, "Not listening"

.L_DE3F_SYNTAX
	BRK
	EQUS &DE, "Syntax : *View <Station>", 0

.D_DE5A;Screen sizes for each mode (in pages)
	EQUB &50, &50, &50, &40, &28, &28, &20, &04

.S_DE62
	LDA #19

.S_DE64
	JSR OSWRCH
	TXA
	JMP OSWRCH

	;POLL TRANSMIT
.L_DE6B
	LDA #&32
	JSR OSBYTE
	TXA
	BMI L_DE1F
	BNE L_DE11;ERROR, TRY AGAIN?

	SEC
	RTS

.S_DE77
	LDY #&0D

.S_DE79
	LDX #&0F

	;POP CONTROL BLOCK
	;IF C SET, TRANSMIT
	;C PRESERVED
.S_DE7B
{
	PHP

.L_DE7C
	LDA D_DE90,Y
	STA D_DD00,X
	DEY
	CPX #&04
	BNE L_DE89

	DEX
	DEX

.L_DE89
	DEX
	BPL L_DE7C

	PLP
	BCS L_DE11;TRANSMIT

	RTS

.D_DE90;OS PROCEDURE : 2 UPDATE WORKSPACE
	EQUB &85, 0
	EQUD &FFFF3000
	EQUD &FFFF3001
	EQUW 2

.D_DE9C;PEEK
	EQUB &81, 0
	EQUW D_DD00+12;&DD0C
	EQUW &FFFF
	EQUW D_DD00+63;&DD3F
	EQUW &FFFF
	EQUD &FFFF009E;REMOTE ADDRESS

.D_DEAA;PEEK
	EQUB &81, 0
	EQUW D_DD00+16;&DD10
	EQUW &FFFF
	EQUW D_DD00+39;&DD27
	EQUW &FFFF
}

.D_DEB4
	EQUB 0, &1E, 0

	;ATTEMPT TO READ STATION & NET
.S_DEB7
{
	CLC

.L_DEB8
	INY
	LDA (TXTPTR),Y
	EOR #&0D
	BEQ L_DE3F_SYNTAX

	EOR #'-'
	BCS L_DEC6
	BNE L_DEB8

	SEC

.L_DEC6
	BEQ L_DEB8
	EOR #&20
	CMP #'A'
	BCS L_DEFD

	LDA #&00
	JSR S_DED6
	BCC L_DEFD

	INY

.S_DED6
	TAX
	LDA #&00
	STA &B2

.L_DEDB
	LDA (TXTPTR),Y
	CMP #'@'
	BCS L_DEFA

	CMP #'.'
	BEQ L_DEFB
	BMI L_DEFA

	AND #&0F
	STA &B3
	ASL &B2
	LDA &B2
	ASL A
	ASL A
	ADC &B2
	ADC &B3
	STA &B2
	INY
	BNE L_DEDB

.L_DEFA
	CLC

.L_DEFB
	LDA &B2

.L_DEFD
	RTS
}
}
.VIEW_END

	SAVE "$.VIEW", VIEW_START, VIEW_END

